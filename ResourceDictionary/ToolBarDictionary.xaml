<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"  >
    <Thickness x:Key="Margin5">5</Thickness>
    <SolidColorBrush x:Key="ToolBarFocusColor" Color="#99007ACC"></SolidColorBrush>
    <SolidColorBrush x:Key="ToolBarBgColor" Color="Transparent"></SolidColorBrush>
    <sys:Double x:Key="WidthAndHeight">32</sys:Double>
    <FontFamily x:Key="FontFamilyValue">Microsoft YaHei UI Light</FontFamily>
    <sys:Double x:Key="RouteWidthAndHeight">32</sys:Double>
    
    <!--tooltip样式-->
    <Style x:Key="ToolTipStyle" TargetType="ToolTip">
        <Style.Setters>
            <Setter Property = "HorizontalOffset" Value="0"/>
            <Setter Property = "VerticalOffset" Value="-48"/>
            <Setter Property = "Background" Value="#9977A12A"/>
            <Setter Property = "Foreground" Value="White"/>
            <Setter Property = "FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="{StaticResource ResourceKey=FontFamilyValue}"/>
        </Style.Setters>
    </Style>
    
    <!--toolbar按钮-->
    <!--定义关闭按钮样式-->
    <Style TargetType="Button" x:Key="CloseButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}" Source="/Globe.QcApp;component/Images/tools/close.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--定义飞行漫游按钮样式-->
    <Style TargetType="Button" x:Key="FlyButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon"  Source="/Globe.QcApp;component/Images/tools/fly.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--定义全屏显示按钮样式-->
    <Style TargetType="Button" x:Key="FullButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon"  Source="/Globe.QcApp;component/Images/tools/full.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--定义查询定位按钮样式-->
    <Style TargetType="Button" x:Key="MapQueryButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon"  Source="/Globe.QcApp;component/Images/tools/query.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--定义场景停止按钮样式-->
    <Style TargetType="Button" x:Key="StopButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon"  Source="/Globe.QcApp;component/Images/tools/stop.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--定义放大按钮样式-->
    <Style TargetType="Button" x:Key="ZoomInButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon"  Source="/Globe.QcApp;component/Images/tools/zoomin.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--定义缩小按钮样式-->
    <Style TargetType="Button" x:Key="ZoomOutButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon"  Source="/Globe.QcApp;component/Images/tools/zoomout.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--定义场景全幅按钮样式-->
    <Style TargetType="Button" x:Key="FullExtentButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon"  Source="/Globe.QcApp;component/Images/tools/fullextent.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--定义场景距离测量按钮样式-->
    <Style TargetType="Button" x:Key="DistanceButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon"  Source="/Globe.QcApp;component/Images/tools/distance.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--定义场景面积测量按钮样式-->
    <Style TargetType="Button" x:Key="AreaButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon"  Source="/Globe.QcApp;component/Images/tools/area.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--定义场景高度测量按钮样式-->
    <Style TargetType="Button" x:Key="HeightButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon"  Source="/Globe.QcApp;component/Images/tools/height.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--定义场景清空按钮样式-->
    <Style TargetType="Button" x:Key="ClearButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=WidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon"  Source="/Globe.QcApp;component/Images/tools/clear.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--飞行路径控制按钮-->
    <!--定义开始飞行按钮样式-->
    <Style TargetType="Button" x:Key="StartRouteButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=RouteWidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=RouteWidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}" Source="/Globe.QcApp;component/Images/routes/play.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--定义暂停飞行按钮样式-->
    <Style TargetType="Button" x:Key="PauseRouteButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=RouteWidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=RouteWidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}" Source="/Globe.QcApp;component/Images/routes/pause.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--定义停止飞行按钮样式-->
    <Style TargetType="Button" x:Key="StopRouteButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="{StaticResource ResourceKey=RouteWidthAndHeight}"/>
        <Setter Property="Height" Value="{StaticResource ResourceKey=RouteWidthAndHeight}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}" Source="/Globe.QcApp;component/Images/routes/stoproute.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--定义左向按钮样式-->
    <Style TargetType="Button" x:Key="LeftButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}" Source="/Globe.QcApp;component/Images/tools/left.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--定义右向按钮样式-->
    <Style TargetType="Button" x:Key="RightButtonStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Name="icon" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{StaticResource Margin5}" Source="/Globe.QcApp;component/Images/tools/right.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ToolBarFocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>